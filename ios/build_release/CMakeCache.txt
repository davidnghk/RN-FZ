# This is the CMakeCache file.
# For build in directory: /Users/wongchunfung/Documents/Faczilla/faczilla/ios/build_release
# It was generated by CMake: /opt/homebrew/Cellar/cmake/3.26.4/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//If buildling for Android, full path to <linux/perf_events.h>
ANDROID_LINUX_PERF_PATH:STRING=

//Header providing backtrace(3) facility
Backtrace_HEADER:STRING=execinfo.h

//Path to a file.
Backtrace_INCLUDE_DIR:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include

//Library providing backtrace(3), empty for default set of libraries
Backtrace_LIBRARY:FILEPATH=

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=CMAKE_ADDR2LINE-NOTFOUND

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Release

//CXX compiler
CMAKE_CXX_COMPILER:FILEPATH=/usr/local/bin/c++

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//C compiler
CMAKE_C_COMPILER:FILEPATH=/usr/local/bin/cc

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=CMAKE_DLLTOOL-NOTFOUND

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/Users/wongchunfung/Documents/Faczilla/faczilla/ios/build_release/CMakeFiles/pkgRedirects

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//Program used to build from build.ninja files.
CMAKE_MAKE_PROGRAM:FILEPATH=/opt/homebrew/bin/ninja

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/usr/bin/nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=CMAKE_OBJCOPY-NOTFOUND

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/usr/bin/objdump

//Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=

//Minimum OS X version to target for deployment (at runtime); newer
// APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

//The product will be built against the headers and libraries located
// inside the indicated SDK.
CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=Hermes

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=0.12.0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=12

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/usr/bin/ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=CMAKE_READELF-NOTFOUND

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Path to a program.
CMAKE_XCRUN:FILEPATH=/usr/bin/xcrun

//Path to a library.
CORE_FOUNDATION:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/System/Library/Frameworks/CoreFoundation.framework

//Emscripten is using the fastcomp backend instead of the LLVM
// one
EMSCRIPTEN_FASTCOMP:BOOL=OFF

//Path to a library.
FOUNDATION:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/System/Library/Frameworks/Foundation.framework

//The gold linker
GOLD_EXECUTABLE:FILEPATH=/usr/bin/ld

//go executable
GO_EXECUTABLE:FILEPATH=GO_EXECUTABLE-NOTFOUND

//Enable compressed pointers. If this is on and the target is a
// 64-bit build, compressed pointers will be used.
HERMESVM_ALLOW_COMPRESSED_POINTERS:BOOL=ON

//Enable concurrency in the GC for 64-bit builds.
HERMESVM_ALLOW_CONCURRENT_GC:BOOL=ON

//If this is on and compressed pointers are used, the heap will
// be allocated in a contiguous 4GB region.
HERMESVM_ALLOW_CONTIGUOUS_HEAP:BOOL=OFF

//Enable huge pages to back the GC managed heap. Only useful on
// Linux.
HERMESVM_ALLOW_HUGE_PAGES:BOOL=OFF

//Allow the use of inline assembly in VM code.
HERMESVM_ALLOW_INLINE_ASM:BOOL=ON

//Simulate Android config on Linux in API tracing.
HERMESVM_API_TRACE_ANDROID_REPLAY:BOOL=OFF

//Enable recording of instructions for crash debugging depending
// on VMExperiments
HERMESVM_CRASH_TRACE:BOOL=OFF

//GC Out-of-memory raises an exception, rather than causing a crash
HERMESVM_EXCEPTION_ON_OOM:BOOL=OFF

//HermesVM GC type: either MALLOC or HADES
HERMESVM_GCKIND:STRING=HADES

//Size of segments in the GC managed heap in KB. Must be a power
// of 2.
HERMESVM_HEAP_SEGMENT_SIZE_KB:STRING=4096

//Enable the indirect threaded interpreter
HERMESVM_INDIRECT_THREADING:BOOL=ON

//hermesLog(...) is enabled, using the platform's logging mechanism
HERMESVM_PLATFORM_LOGGING:BOOL=OFF

//Enable basic block profiling in hermes VM
HERMESVM_PROFILER_BB:BOOL=OFF

//Enable JS Function profiling in hermes VM
HERMESVM_PROFILER_JSFUNCTION:BOOL=OFF

//Enable native call profiling in hermes VM
HERMESVM_PROFILER_NATIVECALL:BOOL=OFF

//Enable opcode stats profiling in hermes VM
HERMESVM_PROFILER_OPCODE:BOOL=OFF

//Enable Handle sanitization
HERMESVM_SANITIZE_HANDLES:BOOL=OFF

//Whether to build a DWARF debugging symbols bundle
HERMES_BUILD_APPLE_DSYM:BOOL=OFF

//Whether to build the libhermes target as a framework bundle or
// dylib on Apple platforms
HERMES_BUILD_APPLE_FRAMEWORK:BOOL=ON

//Exclude the Hermes compiler from libhermes.
HERMES_BUILD_LEAN_LIBHERMES:BOOL=OFF

//Whether to build node-hermes
HERMES_BUILD_NODE_HERMES:BOOL=OFF

//Build JSI as a shared library.
HERMES_BUILD_SHARED_JSI:BOOL=OFF

//Enable -fsanitize=address
HERMES_ENABLE_ADDRESS_SANITIZER:BOOL=OFF

//Include bitcode with the framework
HERMES_ENABLE_BITCODE:BOOL=OFF

//Enables code coverage to be collected from binaries. Coverage
// output will be placed in a subdirectory called "coverage" of
// the build directory.
HERMES_ENABLE_CODE_COVERAGE:BOOL=OFF

//Build with debugger support
HERMES_ENABLE_DEBUGGER:BOOL=ON

//Enable fuzzilli
HERMES_ENABLE_FUZZILLI:BOOL=OFF

//Enable JS Intl support (WIP)
HERMES_ENABLE_INTL:BOOL=OFF

//Build IR instrumentation support
HERMES_ENABLE_IR_INSTRUMENTATION:BOOL=OFF

//Enable libfuzzer
HERMES_ENABLE_LIBFUZZER:BOOL=OFF

//Enable the test suite
HERMES_ENABLE_TEST_SUITE:BOOL=ON

//Enable -fsanitize=thread
HERMES_ENABLE_THREAD_SANITIZER:BOOL=OFF

//Enable CLI tools
HERMES_ENABLE_TOOLS:BOOL=ON

//Enable -fsanitize-coverage=trace-pc-guard
HERMES_ENABLE_TRACE_PC_GUARD:BOOL=OFF

//Enable -fsanitize=undefined
HERMES_ENABLE_UNDEFINED_BEHAVIOR_SANITIZER:BOOL=OFF

//Whether the build should have -Werror enabled
HERMES_ENABLE_WERROR:BOOL=OFF

//Whether to allow falling back on Win10 ICU
HERMES_ENABLE_WIN10_ICU_FALLBACK:BOOL=ON

//Build Facebook (rather than open-source) version of Hermes
HERMES_FACEBOOK_BUILD:BOOL=OFF

//Linker argument to link fuzz targets against a given fuzzer.
HERMES_FUZZING_FLAG:STRING=-fsanitize=fuzzer

//A directory with additional files to bundle in the GitHub release
HERMES_GITHUB_RESOURCE_DIR:STRING=

//Enable compile-time security mitigations
HERMES_HARDENED:BOOL=OFF

//Building for Android
HERMES_IS_ANDROID:BOOL=OFF

//Building for a mobile device
HERMES_IS_MOBILE_BUILD:BOOL=OFF

//Build with memory instrumentation support
HERMES_MEMORY_INSTRUMENTATION:BOOL=ON

//Enable /MP in MSVC for parallel builds
HERMES_MSVC_MP:STRING=ON

//Emit Asm.js/Wasm unsafe compiler intrinsics
HERMES_RUN_WASM:BOOL=OFF

//Enable slow checks in Debug builds
HERMES_SLOW_DEBUG:BOOL=ON

//Link Hermes statically. May only work on GNU/Linux.
HERMES_STATIC_LINK:BOOL=OFF

//Enable to use internal no-op unicode functionality instead of
// relying on underlying system libraries
HERMES_UNICODE_LITE:BOOL=OFF

//Use libflowparser for parsing es6
HERMES_USE_FLOWPARSER:BOOL=OFF

//Force static linking of ICU. May only work on GNU/Linux.
HERMES_USE_STATIC_ICU:BOOL=OFF

//Value Computed by CMake
Hermes_BINARY_DIR:STATIC=/Users/wongchunfung/Documents/Faczilla/faczilla/ios/build_release

//Value Computed by CMake
Hermes_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
Hermes_SOURCE_DIR:STATIC=/Users/wongchunfung/Documents/Faczilla/faczilla/ios/hermes

//Path to a library.
ICONV_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libiconv.tbd

//ld64 executable
LD64_EXECUTABLE:PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld

//Path to a library.
LIBREADLINE_FOUND:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libreadline.tbd

//Path to a library.
LIBTINFO_FOUND:FILEPATH=LIBTINFO_FOUND-NOTFOUND

//PATH to binutils/include containing plugin-api.h for gold plugin.
LLVM_BINUTILS_INCDIR:PATH=

//Host on which LLVM binaries will run
LLVM_HOST_TRIPLE:STRING=arm-apple-darwin22.5.0

//Path to a library.
LLVM_PTHREAD_LIBRARY_PATH:FILEPATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/lib/libpthread.tbd


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: Backtrace_HEADER
Backtrace_HEADER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_INCLUDE_DIR
Backtrace_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_LIBRARY
Backtrace_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/wongchunfung/Documents/Faczilla/faczilla/ios/build_release
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=26
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=4
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.26.4/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.26.4/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.26.4/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Path to cache edit program executable.
CMAKE_EDIT_COMMAND:INTERNAL=/opt/homebrew/Cellar/cmake/3.26.4/bin/ccmake
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=MACHO
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/wongchunfung/Documents/Faczilla/faczilla/ios/hermes
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MAKE_PROGRAM
CMAKE_MAKE_PROGRAM-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=78
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/opt/homebrew/Cellar/cmake/3.26.4/share/cmake
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG
CXX_SUPPORTS_CLASS_MEMACCESS_FLAG:INTERNAL=
//Test CXX_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG
CXX_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG
CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG
CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG:INTERNAL=1
//Test CXX_SUPPORTS_SHORTEN_64_TO_32
CXX_SUPPORTS_SHORTEN_64_TO_32:INTERNAL=1
//Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR
CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR:INTERNAL=1
//Test C_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG
C_SUPPORTS_DELETE_NON_VIRTUAL_DTOR_FLAG:INTERNAL=1
//Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW
C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW:INTERNAL=1
//Test DEPRECATED_COPY_FLAG
DEPRECATED_COPY_FLAG:INTERNAL=1
//Details about finding Backtrace
FIND_PACKAGE_MESSAGE_DETAILS_Backtrace:INTERNAL=[/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.3.sdk/usr/include][v()]
//Details about finding Python
FIND_PACKAGE_MESSAGE_DETAILS_Python:INTERNAL=[/opt/homebrew/Frameworks/Python.framework/Versions/3.11/bin/python3.11][cfound components: Interpreter ][v3.11.4()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Test HAVE_COMPUTED_GOTO
HAVE_COMPUTED_GOTO:INTERNAL=1
//Have symbol CPU_COUNT
HAVE_CPU_COUNT:INTERNAL=
//Have include CrashReporterClient.h
HAVE_CRASHREPORTERCLIENT_H:INTERNAL=
//Test HAVE_CRASHREPORTER_INFO
HAVE_CRASHREPORTER_INFO:INTERNAL=1
//Test HAVE_CXX_ATOMICS64_WITHOUT_LIB
HAVE_CXX_ATOMICS64_WITHOUT_LIB:INTERNAL=1
//Test HAVE_CXX_ATOMICS_WITHOUT_LIB
HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1
//Test HAVE_DEAD_STRIP
HAVE_DEAD_STRIP:INTERNAL=1
//Have symbol arc4random
HAVE_DECL_ARC4RANDOM:INTERNAL=1
//Have symbol FE_ALL_EXCEPT
HAVE_DECL_FE_ALL_EXCEPT:INTERNAL=1
//Have symbol FE_INEXACT
HAVE_DECL_FE_INEXACT:INTERNAL=1
//Have symbol strerror_s
HAVE_DECL_STRERROR_S:INTERNAL=
//Have symbol dladdr
HAVE_DLADDR:INTERNAL=1
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=1
//Have symbol dlopen
HAVE_DLOPEN:INTERNAL=1
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have include fenv.h
HAVE_FENV_H:INTERNAL=1
//Have symbol futimens
HAVE_FUTIMENS:INTERNAL=1
//Have symbol futimes
HAVE_FUTIMES:INTERNAL=1
//Test HAVE_GC_SECTIONS
HAVE_GC_SECTIONS:INTERNAL=
//Have symbol getpagesize
HAVE_GETPAGESIZE:INTERNAL=1
//Have symbol getrlimit
HAVE_GETRLIMIT:INTERNAL=1
//Have symbol getrusage
HAVE_GETRUSAGE:INTERNAL=1
//Have include histedit.h
HAVE_HISTEDIT_H:INTERNAL=1
//Test HAVE_ICF
HAVE_ICF:INTERNAL=
//Have symbol isatty
HAVE_ISATTY:INTERNAL=1
//Have library dl
HAVE_LIBDL:INTERNAL=1
//Have library pthread
HAVE_LIBPTHREAD:INTERNAL=1
//Have function readline
HAVE_LIBREADLINE:INTERNAL=1
//Have library rt
HAVE_LIBRT:INTERNAL=
//Have library xar
HAVE_LIBXAR:INTERNAL=1
//Have include link.h
HAVE_LINK_H:INTERNAL=
//Have symbol lseek64
HAVE_LSEEK64:INTERNAL=
//Have include mach/mach.h
HAVE_MACH_MACH_H:INTERNAL=1
//Have symbol mallctl
HAVE_MALLCTL:INTERNAL=
//Have symbol mallinfo
HAVE_MALLINFO:INTERNAL=
//Have include malloc.h
HAVE_MALLOC_H:INTERNAL=
//Have include malloc/malloc.h
HAVE_MALLOC_MALLOC_H:INTERNAL=1
//Have symbol malloc_zone_statistics
HAVE_MALLOC_ZONE_STATISTICS:INTERNAL=1
//Have symbol posix_fallocate
HAVE_POSIX_FALLOCATE:INTERNAL=
//Have symbol posix_spawn
HAVE_POSIX_SPAWN:INTERNAL=1
//Have symbol pread
HAVE_PREAD:INTERNAL=1
//Have symbol pthread_getname_np
HAVE_PTHREAD_GETNAME_NP:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_GETSPECIFIC:INTERNAL=1
//Have include pthread.h
HAVE_PTHREAD_H:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_MUTEX_LOCK:INTERNAL=1
//Have library pthread
HAVE_PTHREAD_RWLOCK_INIT:INTERNAL=1
//Have symbol pthread_setname_np
HAVE_PTHREAD_SETNAME_NP:INTERNAL=1
//Have symbol realpath
HAVE_REALPATH:INTERNAL=1
//Have symbol sbrk
HAVE_SBRK:INTERNAL=1
//Have symbol sched_getaffinity
HAVE_SCHED_GETAFFINITY:INTERNAL=
//Have symbol setenv
HAVE_SETENV:INTERNAL=1
//Have symbol setrlimit
HAVE_SETRLIMIT:INTERNAL=1
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Have symbol strerror
HAVE_STRERROR:INTERNAL=1
//Have symbol strerror_r
HAVE_STRERROR_R:INTERNAL=1
//Have symbol sysconf
HAVE_SYSCONF:INTERNAL=1
//Have include sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=1
//Have include sys/mman.h
HAVE_SYS_MMAN_H:INTERNAL=1
//Have include sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=1
//Have include sys/resource.h
HAVE_SYS_RESOURCE_H:INTERNAL=1
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=1
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include termios.h
HAVE_TERMIOS_H:INTERNAL=1
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=1
//Have include valgrind/valgrind.h
HAVE_VALGRIND_VALGRIND_H:INTERNAL=
//Have include zlib.h
HAVE_ZLIB_H:INTERNAL=1
//Have symbol _Unwind_Backtrace
HAVE__UNWIND_BACKTRACE:INTERNAL=1
//Test LLVM_HAS_ATOMICS
LLVM_HAS_ATOMICS:INTERNAL=1
//Have symbol __GLIBC__
LLVM_USING_GLIBC:INTERNAL=
//Test RANGE_ANALYSIS_FLAG
RANGE_ANALYSIS_FLAG:INTERNAL=1
//Test SUPPORTS_GNU_ZERO_VARIADIC_MACRO_ARGUMENTS_FLAG
SUPPORTS_GNU_ZERO_VARIADIC_MACRO_ARGUMENTS_FLAG:INTERNAL=1
//Test SUPPORTS_NO_PIE_FLAG
SUPPORTS_NO_PIE_FLAG:INTERNAL=1
//Test SUPPORTS_VARIADIC_MACROS_FLAG
SUPPORTS_VARIADIC_MACROS_FLAG:INTERNAL=1
//Have symbol backtrace
_Backtrace_SYM_FOUND:INTERNAL=1
//Compiler reason failure
_Python_Compiler_REASON_FAILURE:INTERNAL=
//Development reason failure
_Python_Development_REASON_FAILURE:INTERNAL=
//Path to a program.
_Python_EXECUTABLE:INTERNAL=/opt/homebrew/Frameworks/Python.framework/Versions/3.11/bin/python3.11
//Python Properties
_Python_INTERPRETER_PROPERTIES:INTERNAL=Python;3;11;4;64;;cpython-311-darwin;abi3;/opt/homebrew/opt/python@3.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11;/opt/homebrew/opt/python@3.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11;/opt/homebrew/opt/python@3.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages;/opt/homebrew/opt/python@3.11/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages
_Python_INTERPRETER_SIGNATURE:INTERNAL=91fa6b41055f536ea0963b4ef9ef5b99
//NumPy reason failure
_Python_NumPy_REASON_FAILURE:INTERNAL=

